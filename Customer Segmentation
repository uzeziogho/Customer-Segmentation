{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "6530b704",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-06-20T11:44:41.070340Z",
     "iopub.status.busy": "2024-06-20T11:44:41.069937Z",
     "iopub.status.idle": "2024-06-20T11:44:42.045323Z",
     "shell.execute_reply": "2024-06-20T11:44:42.044180Z"
    },
    "papermill": {
     "duration": 0.987005,
     "end_time": "2024-06-20T11:44:42.048201",
     "exception": false,
     "start_time": "2024-06-20T11:44:41.061196",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/customer-transactions/sample_dataset.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "7f4cbf90",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:44:42.064778Z",
     "iopub.status.busy": "2024-06-20T11:44:42.063647Z",
     "iopub.status.idle": "2024-06-20T11:44:42.232873Z",
     "shell.execute_reply": "2024-06-20T11:44:42.231461Z"
    },
    "papermill": {
     "duration": 0.180074,
     "end_time": "2024-06-20T11:44:42.235533",
     "exception": false,
     "start_time": "2024-06-20T11:44:42.055459",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "cust_data=pd.read_csv(\"/kaggle/input/customer-transactions/sample_dataset.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "32457b73",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:44:42.250794Z",
     "iopub.status.busy": "2024-06-20T11:44:42.250356Z",
     "iopub.status.idle": "2024-06-20T11:44:42.276639Z",
     "shell.execute_reply": "2024-06-20T11:44:42.275452Z"
    },
    "papermill": {
     "duration": 0.036874,
     "end_time": "2024-06-20T11:44:42.279213",
     "exception": false,
     "start_time": "2024-06-20T11:44:42.242339",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Customer ID</th>\n",
       "      <th>Name</th>\n",
       "      <th>Surname</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Birthdate</th>\n",
       "      <th>Transaction Amount</th>\n",
       "      <th>Date</th>\n",
       "      <th>Merchant Name</th>\n",
       "      <th>Category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>752858</td>\n",
       "      <td>Sean</td>\n",
       "      <td>Rodriguez</td>\n",
       "      <td>F</td>\n",
       "      <td>2002-10-20</td>\n",
       "      <td>35.47</td>\n",
       "      <td>2023-04-03</td>\n",
       "      <td>Smith-Russell</td>\n",
       "      <td>Cosmetic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>26381</td>\n",
       "      <td>Michelle</td>\n",
       "      <td>Phelps</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1985-10-24</td>\n",
       "      <td>2552.72</td>\n",
       "      <td>2023-07-17</td>\n",
       "      <td>Peck, Spence and Young</td>\n",
       "      <td>Travel</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>305449</td>\n",
       "      <td>Jacob</td>\n",
       "      <td>Williams</td>\n",
       "      <td>M</td>\n",
       "      <td>1981-10-25</td>\n",
       "      <td>115.97</td>\n",
       "      <td>2023-09-20</td>\n",
       "      <td>Steele Inc</td>\n",
       "      <td>Clothing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>988259</td>\n",
       "      <td>Nathan</td>\n",
       "      <td>Snyder</td>\n",
       "      <td>M</td>\n",
       "      <td>1977-10-26</td>\n",
       "      <td>11.31</td>\n",
       "      <td>2023-01-11</td>\n",
       "      <td>Wilson, Wilson and Russell</td>\n",
       "      <td>Cosmetic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>764762</td>\n",
       "      <td>Crystal</td>\n",
       "      <td>Knapp</td>\n",
       "      <td>F</td>\n",
       "      <td>1951-11-02</td>\n",
       "      <td>62.21</td>\n",
       "      <td>2023-06-13</td>\n",
       "      <td>Palmer-Hinton</td>\n",
       "      <td>Electronics</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Customer ID      Name    Surname Gender   Birthdate  Transaction Amount  \\\n",
       "0       752858      Sean  Rodriguez      F  2002-10-20               35.47   \n",
       "1        26381  Michelle     Phelps    NaN  1985-10-24             2552.72   \n",
       "2       305449     Jacob   Williams      M  1981-10-25              115.97   \n",
       "3       988259    Nathan     Snyder      M  1977-10-26               11.31   \n",
       "4       764762   Crystal      Knapp      F  1951-11-02               62.21   \n",
       "\n",
       "         Date               Merchant Name     Category  \n",
       "0  2023-04-03               Smith-Russell     Cosmetic  \n",
       "1  2023-07-17      Peck, Spence and Young       Travel  \n",
       "2  2023-09-20                  Steele Inc     Clothing  \n",
       "3  2023-01-11  Wilson, Wilson and Russell     Cosmetic  \n",
       "4  2023-06-13               Palmer-Hinton  Electronics  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cust_data.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "a200c412",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:44:42.295786Z",
     "iopub.status.busy": "2024-06-20T11:44:42.294926Z",
     "iopub.status.idle": "2024-06-20T11:44:42.722650Z",
     "shell.execute_reply": "2024-06-20T11:44:42.721456Z"
    },
    "papermill": {
     "duration": 0.438733,
     "end_time": "2024-06-20T11:44:42.725214",
     "exception": false,
     "start_time": "2024-06-20T11:44:42.286481",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Customer ID</th>\n",
       "      <th>Name</th>\n",
       "      <th>Surname</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Birthdate</th>\n",
       "      <th>Transaction Amount</th>\n",
       "      <th>Date</th>\n",
       "      <th>Merchant Name</th>\n",
       "      <th>Category</th>\n",
       "      <th>Birthyear</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>752858</td>\n",
       "      <td>Sean</td>\n",
       "      <td>Rodriguez</td>\n",
       "      <td>F</td>\n",
       "      <td>2002-10-20</td>\n",
       "      <td>35.47</td>\n",
       "      <td>2023-04-03</td>\n",
       "      <td>Smith-Russell</td>\n",
       "      <td>Cosmetic</td>\n",
       "      <td>2002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>26381</td>\n",
       "      <td>Michelle</td>\n",
       "      <td>Phelps</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1985-10-24</td>\n",
       "      <td>2552.72</td>\n",
       "      <td>2023-07-17</td>\n",
       "      <td>Peck, Spence and Young</td>\n",
       "      <td>Travel</td>\n",
       "      <td>1985</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>305449</td>\n",
       "      <td>Jacob</td>\n",
       "      <td>Williams</td>\n",
       "      <td>M</td>\n",
       "      <td>1981-10-25</td>\n",
       "      <td>115.97</td>\n",
       "      <td>2023-09-20</td>\n",
       "      <td>Steele Inc</td>\n",
       "      <td>Clothing</td>\n",
       "      <td>1981</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>988259</td>\n",
       "      <td>Nathan</td>\n",
       "      <td>Snyder</td>\n",
       "      <td>M</td>\n",
       "      <td>1977-10-26</td>\n",
       "      <td>11.31</td>\n",
       "      <td>2023-01-11</td>\n",
       "      <td>Wilson, Wilson and Russell</td>\n",
       "      <td>Cosmetic</td>\n",
       "      <td>1977</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>764762</td>\n",
       "      <td>Crystal</td>\n",
       "      <td>Knapp</td>\n",
       "      <td>F</td>\n",
       "      <td>1951-11-02</td>\n",
       "      <td>62.21</td>\n",
       "      <td>2023-06-13</td>\n",
       "      <td>Palmer-Hinton</td>\n",
       "      <td>Electronics</td>\n",
       "      <td>1951</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Customer ID      Name    Surname Gender   Birthdate  Transaction Amount  \\\n",
       "0       752858      Sean  Rodriguez      F  2002-10-20               35.47   \n",
       "1        26381  Michelle     Phelps    NaN  1985-10-24             2552.72   \n",
       "2       305449     Jacob   Williams      M  1981-10-25              115.97   \n",
       "3       988259    Nathan     Snyder      M  1977-10-26               11.31   \n",
       "4       764762   Crystal      Knapp      F  1951-11-02               62.21   \n",
       "\n",
       "         Date               Merchant Name     Category Birthyear  \n",
       "0  2023-04-03               Smith-Russell     Cosmetic      2002  \n",
       "1  2023-07-17      Peck, Spence and Young       Travel      1985  \n",
       "2  2023-09-20                  Steele Inc     Clothing      1981  \n",
       "3  2023-01-11  Wilson, Wilson and Russell     Cosmetic      1977  \n",
       "4  2023-06-13               Palmer-Hinton  Electronics      1951  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Extract the month and create a new column 'month'\n",
    "cust_data['month'] = pd.to_datetime(cust_data['Date']).dt.strftime('%m')\n",
    "# Split the \"date\" column by \"-\"\n",
    "cust_data[['Birthyear', 'month', 'day']] = cust_data['Birthdate'].str.split('-', expand=True)\n",
    "\n",
    "# Create a new column \"year\" and store the first part (year)\n",
    "cust_data['Birthyear'] = cust_data['Birthyear']\n",
    "\n",
    "cust_data.drop('day', axis=1, inplace=True)\n",
    "cust_data.drop('month', axis=1, inplace=True)\n",
    "cust_data.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "241d6fd1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:44:42.741422Z",
     "iopub.status.busy": "2024-06-20T11:44:42.740987Z",
     "iopub.status.idle": "2024-06-20T11:44:42.755881Z",
     "shell.execute_reply": "2024-06-20T11:44:42.754918Z"
    },
    "papermill": {
     "duration": 0.026213,
     "end_time": "2024-06-20T11:44:42.758533",
     "exception": false,
     "start_time": "2024-06-20T11:44:42.732320",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Calculate the mode of the 'Category' column\n",
    "mode_category = cust_data['Gender'].mode()[0]\n",
    "\n",
    "# Fill missing values with the mode\n",
    "cust_data['Gender'].fillna(mode_category, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "b6ec90b9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:44:42.774244Z",
     "iopub.status.busy": "2024-06-20T11:44:42.773864Z",
     "iopub.status.idle": "2024-06-20T11:44:42.790306Z",
     "shell.execute_reply": "2024-06-20T11:44:42.789123Z"
    },
    "papermill": {
     "duration": 0.027182,
     "end_time": "2024-06-20T11:44:42.792894",
     "exception": false,
     "start_time": "2024-06-20T11:44:42.765712",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Customer ID</th>\n",
       "      <th>Name</th>\n",
       "      <th>Surname</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Birthdate</th>\n",
       "      <th>Transaction Amount</th>\n",
       "      <th>Date</th>\n",
       "      <th>Merchant Name</th>\n",
       "      <th>Category</th>\n",
       "      <th>Birthyear</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>752858</td>\n",
       "      <td>Sean</td>\n",
       "      <td>Rodriguez</td>\n",
       "      <td>F</td>\n",
       "      <td>2002-10-20</td>\n",
       "      <td>35.47</td>\n",
       "      <td>2023-04-03</td>\n",
       "      <td>Smith-Russell</td>\n",
       "      <td>Cosmetic</td>\n",
       "      <td>2002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>26381</td>\n",
       "      <td>Michelle</td>\n",
       "      <td>Phelps</td>\n",
       "      <td>F</td>\n",
       "      <td>1985-10-24</td>\n",
       "      <td>2552.72</td>\n",
       "      <td>2023-07-17</td>\n",
       "      <td>Peck, Spence and Young</td>\n",
       "      <td>Travel</td>\n",
       "      <td>1985</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>305449</td>\n",
       "      <td>Jacob</td>\n",
       "      <td>Williams</td>\n",
       "      <td>M</td>\n",
       "      <td>1981-10-25</td>\n",
       "      <td>115.97</td>\n",
       "      <td>2023-09-20</td>\n",
       "      <td>Steele Inc</td>\n",
       "      <td>Clothing</td>\n",
       "      <td>1981</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>988259</td>\n",
       "      <td>Nathan</td>\n",
       "      <td>Snyder</td>\n",
       "      <td>M</td>\n",
       "      <td>1977-10-26</td>\n",
       "      <td>11.31</td>\n",
       "      <td>2023-01-11</td>\n",
       "      <td>Wilson, Wilson and Russell</td>\n",
       "      <td>Cosmetic</td>\n",
       "      <td>1977</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>764762</td>\n",
       "      <td>Crystal</td>\n",
       "      <td>Knapp</td>\n",
       "      <td>F</td>\n",
       "      <td>1951-11-02</td>\n",
       "      <td>62.21</td>\n",
       "      <td>2023-06-13</td>\n",
       "      <td>Palmer-Hinton</td>\n",
       "      <td>Electronics</td>\n",
       "      <td>1951</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Customer ID      Name    Surname Gender   Birthdate  Transaction Amount  \\\n",
       "0       752858      Sean  Rodriguez      F  2002-10-20               35.47   \n",
       "1        26381  Michelle     Phelps      F  1985-10-24             2552.72   \n",
       "2       305449     Jacob   Williams      M  1981-10-25              115.97   \n",
       "3       988259    Nathan     Snyder      M  1977-10-26               11.31   \n",
       "4       764762   Crystal      Knapp      F  1951-11-02               62.21   \n",
       "\n",
       "         Date               Merchant Name     Category Birthyear  \n",
       "0  2023-04-03               Smith-Russell     Cosmetic      2002  \n",
       "1  2023-07-17      Peck, Spence and Young       Travel      1985  \n",
       "2  2023-09-20                  Steele Inc     Clothing      1981  \n",
       "3  2023-01-11  Wilson, Wilson and Russell     Cosmetic      1977  \n",
       "4  2023-06-13               Palmer-Hinton  Electronics      1951  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cust_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "46debed5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:44:42.809257Z",
     "iopub.status.busy": "2024-06-20T11:44:42.808862Z",
     "iopub.status.idle": "2024-06-20T11:44:43.251612Z",
     "shell.execute_reply": "2024-06-20T11:44:43.250384Z"
    },
    "papermill": {
     "duration": 0.45392,
     "end_time": "2024-06-20T11:44:43.254213",
     "exception": false,
     "start_time": "2024-06-20T11:44:42.800293",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Customer ID</th>\n",
       "      <th>Name</th>\n",
       "      <th>Surname</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Birthdate</th>\n",
       "      <th>Transaction Amount</th>\n",
       "      <th>Date</th>\n",
       "      <th>Merchant Name</th>\n",
       "      <th>Category</th>\n",
       "      <th>Birthyear</th>\n",
       "      <th>month</th>\n",
       "      <th>PurchaseMonth</th>\n",
       "      <th>Month</th>\n",
       "      <th>Day</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>752858</td>\n",
       "      <td>Sean</td>\n",
       "      <td>Rodriguez</td>\n",
       "      <td>F</td>\n",
       "      <td>2002-10-20</td>\n",
       "      <td>35.47</td>\n",
       "      <td>2023-04-03</td>\n",
       "      <td>Smith-Russell</td>\n",
       "      <td>Cosmetic</td>\n",
       "      <td>2002</td>\n",
       "      <td>04</td>\n",
       "      <td>2023</td>\n",
       "      <td>04</td>\n",
       "      <td>03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>26381</td>\n",
       "      <td>Michelle</td>\n",
       "      <td>Phelps</td>\n",
       "      <td>F</td>\n",
       "      <td>1985-10-24</td>\n",
       "      <td>2552.72</td>\n",
       "      <td>2023-07-17</td>\n",
       "      <td>Peck, Spence and Young</td>\n",
       "      <td>Travel</td>\n",
       "      <td>1985</td>\n",
       "      <td>07</td>\n",
       "      <td>2023</td>\n",
       "      <td>07</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>305449</td>\n",
       "      <td>Jacob</td>\n",
       "      <td>Williams</td>\n",
       "      <td>M</td>\n",
       "      <td>1981-10-25</td>\n",
       "      <td>115.97</td>\n",
       "      <td>2023-09-20</td>\n",
       "      <td>Steele Inc</td>\n",
       "      <td>Clothing</td>\n",
       "      <td>1981</td>\n",
       "      <td>09</td>\n",
       "      <td>2023</td>\n",
       "      <td>09</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>988259</td>\n",
       "      <td>Nathan</td>\n",
       "      <td>Snyder</td>\n",
       "      <td>M</td>\n",
       "      <td>1977-10-26</td>\n",
       "      <td>11.31</td>\n",
       "      <td>2023-01-11</td>\n",
       "      <td>Wilson, Wilson and Russell</td>\n",
       "      <td>Cosmetic</td>\n",
       "      <td>1977</td>\n",
       "      <td>01</td>\n",
       "      <td>2023</td>\n",
       "      <td>01</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>764762</td>\n",
       "      <td>Crystal</td>\n",
       "      <td>Knapp</td>\n",
       "      <td>F</td>\n",
       "      <td>1951-11-02</td>\n",
       "      <td>62.21</td>\n",
       "      <td>2023-06-13</td>\n",
       "      <td>Palmer-Hinton</td>\n",
       "      <td>Electronics</td>\n",
       "      <td>1951</td>\n",
       "      <td>06</td>\n",
       "      <td>2023</td>\n",
       "      <td>06</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>576539</td>\n",
       "      <td>Monica</td>\n",
       "      <td>Bartlett</td>\n",
       "      <td>F</td>\n",
       "      <td>2001-10-20</td>\n",
       "      <td>99.14</td>\n",
       "      <td>2023-08-24</td>\n",
       "      <td>Tran, Torres and Joyce</td>\n",
       "      <td>Cosmetic</td>\n",
       "      <td>2001</td>\n",
       "      <td>08</td>\n",
       "      <td>2023</td>\n",
       "      <td>08</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>124681</td>\n",
       "      <td>Thomas</td>\n",
       "      <td>Shaw</td>\n",
       "      <td>F</td>\n",
       "      <td>1976-10-26</td>\n",
       "      <td>145.94</td>\n",
       "      <td>2023-08-30</td>\n",
       "      <td>Evans, Griffin and Torres</td>\n",
       "      <td>Cosmetic</td>\n",
       "      <td>1976</td>\n",
       "      <td>08</td>\n",
       "      <td>2023</td>\n",
       "      <td>08</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>521807</td>\n",
       "      <td>Kelsey</td>\n",
       "      <td>Pena</td>\n",
       "      <td>F</td>\n",
       "      <td>1968-10-28</td>\n",
       "      <td>161.39</td>\n",
       "      <td>2023-02-08</td>\n",
       "      <td>Miller PLC</td>\n",
       "      <td>Cosmetic</td>\n",
       "      <td>1968</td>\n",
       "      <td>02</td>\n",
       "      <td>2023</td>\n",
       "      <td>02</td>\n",
       "      <td>08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>504238</td>\n",
       "      <td>Denise</td>\n",
       "      <td>Porter</td>\n",
       "      <td>M</td>\n",
       "      <td>1957-10-31</td>\n",
       "      <td>77.73</td>\n",
       "      <td>2023-01-12</td>\n",
       "      <td>Jackson-Morgan</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>1957</td>\n",
       "      <td>01</td>\n",
       "      <td>2023</td>\n",
       "      <td>01</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>583532</td>\n",
       "      <td>Alexander</td>\n",
       "      <td>Richardson</td>\n",
       "      <td>F</td>\n",
       "      <td>1974-10-27</td>\n",
       "      <td>142.85</td>\n",
       "      <td>2023-06-07</td>\n",
       "      <td>Blake, Mays and Anderson</td>\n",
       "      <td>Clothing</td>\n",
       "      <td>1974</td>\n",
       "      <td>06</td>\n",
       "      <td>2023</td>\n",
       "      <td>06</td>\n",
       "      <td>07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>924841</td>\n",
       "      <td>Kimberly</td>\n",
       "      <td>Ball</td>\n",
       "      <td>M</td>\n",
       "      <td>1976-10-26</td>\n",
       "      <td>928.68</td>\n",
       "      <td>2023-02-11</td>\n",
       "      <td>Miller, Walker and Bond</td>\n",
       "      <td>Travel</td>\n",
       "      <td>1976</td>\n",
       "      <td>02</td>\n",
       "      <td>2023</td>\n",
       "      <td>02</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Customer ID       Name     Surname Gender   Birthdate  Transaction Amount  \\\n",
       "0        752858       Sean   Rodriguez      F  2002-10-20               35.47   \n",
       "1         26381   Michelle      Phelps      F  1985-10-24             2552.72   \n",
       "2        305449      Jacob    Williams      M  1981-10-25              115.97   \n",
       "3        988259     Nathan      Snyder      M  1977-10-26               11.31   \n",
       "4        764762    Crystal       Knapp      F  1951-11-02               62.21   \n",
       "5        576539     Monica    Bartlett      F  2001-10-20               99.14   \n",
       "6        124681     Thomas        Shaw      F  1976-10-26              145.94   \n",
       "7        521807     Kelsey        Pena      F  1968-10-28              161.39   \n",
       "8        504238     Denise      Porter      M  1957-10-31               77.73   \n",
       "9        583532  Alexander  Richardson      F  1974-10-27              142.85   \n",
       "10       924841   Kimberly        Ball      M  1976-10-26              928.68   \n",
       "\n",
       "          Date               Merchant Name     Category Birthyear month  \\\n",
       "0   2023-04-03               Smith-Russell     Cosmetic      2002    04   \n",
       "1   2023-07-17      Peck, Spence and Young       Travel      1985    07   \n",
       "2   2023-09-20                  Steele Inc     Clothing      1981    09   \n",
       "3   2023-01-11  Wilson, Wilson and Russell     Cosmetic      1977    01   \n",
       "4   2023-06-13               Palmer-Hinton  Electronics      1951    06   \n",
       "5   2023-08-24      Tran, Torres and Joyce     Cosmetic      2001    08   \n",
       "6   2023-08-30   Evans, Griffin and Torres     Cosmetic      1976    08   \n",
       "7   2023-02-08                  Miller PLC     Cosmetic      1968    02   \n",
       "8   2023-01-12              Jackson-Morgan   Restaurant      1957    01   \n",
       "9   2023-06-07    Blake, Mays and Anderson     Clothing      1974    06   \n",
       "10  2023-02-11     Miller, Walker and Bond       Travel      1976    02   \n",
       "\n",
       "   PurchaseMonth Month Day  \n",
       "0           2023    04  03  \n",
       "1           2023    07  17  \n",
       "2           2023    09  20  \n",
       "3           2023    01  11  \n",
       "4           2023    06  13  \n",
       "5           2023    08  24  \n",
       "6           2023    08  30  \n",
       "7           2023    02  08  \n",
       "8           2023    01  12  \n",
       "9           2023    06  07  \n",
       "10          2023    02  11  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Extract the month and create a new column 'month'\n",
    "cust_data['month'] = pd.to_datetime(cust_data['Date']).dt.strftime('%m')\n",
    "# Split the \"date\" column by \"-\"\n",
    "cust_data[['PurchaseMonth','Month','Day']] = cust_data['Date'].str.split('-', expand=True)\n",
    "\n",
    "# Create a new column \"year\" and store the first part (year)\n",
    "cust_data['PurchaseMonth'] = cust_data['PurchaseMonth']\n",
    "cust_data.head(11)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "85df0e15",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:44:43.271277Z",
     "iopub.status.busy": "2024-06-20T11:44:43.270903Z",
     "iopub.status.idle": "2024-06-20T11:44:44.623654Z",
     "shell.execute_reply": "2024-06-20T11:44:44.622445Z"
    },
    "papermill": {
     "duration": 1.364375,
     "end_time": "2024-06-20T11:44:44.626295",
     "exception": false,
     "start_time": "2024-06-20T11:44:43.261920",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Customer ID</th>\n",
       "      <th>Name</th>\n",
       "      <th>Surname</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Birthdate</th>\n",
       "      <th>Transaction Amount</th>\n",
       "      <th>Date</th>\n",
       "      <th>Merchant Name</th>\n",
       "      <th>Category</th>\n",
       "      <th>Birthyear</th>\n",
       "      <th>month</th>\n",
       "      <th>PurchaseMonth</th>\n",
       "      <th>Month</th>\n",
       "      <th>Day</th>\n",
       "      <th>Encoded_Gender</th>\n",
       "      <th>Encoded_Category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>752858</td>\n",
       "      <td>Sean</td>\n",
       "      <td>Rodriguez</td>\n",
       "      <td>F</td>\n",
       "      <td>2002-10-20</td>\n",
       "      <td>35.47</td>\n",
       "      <td>2023-04-03</td>\n",
       "      <td>Smith-Russell</td>\n",
       "      <td>Cosmetic</td>\n",
       "      <td>2002</td>\n",
       "      <td>04</td>\n",
       "      <td>2023</td>\n",
       "      <td>04</td>\n",
       "      <td>03</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>26381</td>\n",
       "      <td>Michelle</td>\n",
       "      <td>Phelps</td>\n",
       "      <td>F</td>\n",
       "      <td>1985-10-24</td>\n",
       "      <td>2552.72</td>\n",
       "      <td>2023-07-17</td>\n",
       "      <td>Peck, Spence and Young</td>\n",
       "      <td>Travel</td>\n",
       "      <td>1985</td>\n",
       "      <td>07</td>\n",
       "      <td>2023</td>\n",
       "      <td>07</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>305449</td>\n",
       "      <td>Jacob</td>\n",
       "      <td>Williams</td>\n",
       "      <td>M</td>\n",
       "      <td>1981-10-25</td>\n",
       "      <td>115.97</td>\n",
       "      <td>2023-09-20</td>\n",
       "      <td>Steele Inc</td>\n",
       "      <td>Clothing</td>\n",
       "      <td>1981</td>\n",
       "      <td>09</td>\n",
       "      <td>2023</td>\n",
       "      <td>09</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>988259</td>\n",
       "      <td>Nathan</td>\n",
       "      <td>Snyder</td>\n",
       "      <td>M</td>\n",
       "      <td>1977-10-26</td>\n",
       "      <td>11.31</td>\n",
       "      <td>2023-01-11</td>\n",
       "      <td>Wilson, Wilson and Russell</td>\n",
       "      <td>Cosmetic</td>\n",
       "      <td>1977</td>\n",
       "      <td>01</td>\n",
       "      <td>2023</td>\n",
       "      <td>01</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>764762</td>\n",
       "      <td>Crystal</td>\n",
       "      <td>Knapp</td>\n",
       "      <td>F</td>\n",
       "      <td>1951-11-02</td>\n",
       "      <td>62.21</td>\n",
       "      <td>2023-06-13</td>\n",
       "      <td>Palmer-Hinton</td>\n",
       "      <td>Electronics</td>\n",
       "      <td>1951</td>\n",
       "      <td>06</td>\n",
       "      <td>2023</td>\n",
       "      <td>06</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>576539</td>\n",
       "      <td>Monica</td>\n",
       "      <td>Bartlett</td>\n",
       "      <td>F</td>\n",
       "      <td>2001-10-20</td>\n",
       "      <td>99.14</td>\n",
       "      <td>2023-08-24</td>\n",
       "      <td>Tran, Torres and Joyce</td>\n",
       "      <td>Cosmetic</td>\n",
       "      <td>2001</td>\n",
       "      <td>08</td>\n",
       "      <td>2023</td>\n",
       "      <td>08</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>124681</td>\n",
       "      <td>Thomas</td>\n",
       "      <td>Shaw</td>\n",
       "      <td>F</td>\n",
       "      <td>1976-10-26</td>\n",
       "      <td>145.94</td>\n",
       "      <td>2023-08-30</td>\n",
       "      <td>Evans, Griffin and Torres</td>\n",
       "      <td>Cosmetic</td>\n",
       "      <td>1976</td>\n",
       "      <td>08</td>\n",
       "      <td>2023</td>\n",
       "      <td>08</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>521807</td>\n",
       "      <td>Kelsey</td>\n",
       "      <td>Pena</td>\n",
       "      <td>F</td>\n",
       "      <td>1968-10-28</td>\n",
       "      <td>161.39</td>\n",
       "      <td>2023-02-08</td>\n",
       "      <td>Miller PLC</td>\n",
       "      <td>Cosmetic</td>\n",
       "      <td>1968</td>\n",
       "      <td>02</td>\n",
       "      <td>2023</td>\n",
       "      <td>02</td>\n",
       "      <td>08</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>504238</td>\n",
       "      <td>Denise</td>\n",
       "      <td>Porter</td>\n",
       "      <td>M</td>\n",
       "      <td>1957-10-31</td>\n",
       "      <td>77.73</td>\n",
       "      <td>2023-01-12</td>\n",
       "      <td>Jackson-Morgan</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>1957</td>\n",
       "      <td>01</td>\n",
       "      <td>2023</td>\n",
       "      <td>01</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>583532</td>\n",
       "      <td>Alexander</td>\n",
       "      <td>Richardson</td>\n",
       "      <td>F</td>\n",
       "      <td>1974-10-27</td>\n",
       "      <td>142.85</td>\n",
       "      <td>2023-06-07</td>\n",
       "      <td>Blake, Mays and Anderson</td>\n",
       "      <td>Clothing</td>\n",
       "      <td>1974</td>\n",
       "      <td>06</td>\n",
       "      <td>2023</td>\n",
       "      <td>06</td>\n",
       "      <td>07</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>924841</td>\n",
       "      <td>Kimberly</td>\n",
       "      <td>Ball</td>\n",
       "      <td>M</td>\n",
       "      <td>1976-10-26</td>\n",
       "      <td>928.68</td>\n",
       "      <td>2023-02-11</td>\n",
       "      <td>Miller, Walker and Bond</td>\n",
       "      <td>Travel</td>\n",
       "      <td>1976</td>\n",
       "      <td>02</td>\n",
       "      <td>2023</td>\n",
       "      <td>02</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Customer ID       Name     Surname Gender   Birthdate  Transaction Amount  \\\n",
       "0        752858       Sean   Rodriguez      F  2002-10-20               35.47   \n",
       "1         26381   Michelle      Phelps      F  1985-10-24             2552.72   \n",
       "2        305449      Jacob    Williams      M  1981-10-25              115.97   \n",
       "3        988259     Nathan      Snyder      M  1977-10-26               11.31   \n",
       "4        764762    Crystal       Knapp      F  1951-11-02               62.21   \n",
       "5        576539     Monica    Bartlett      F  2001-10-20               99.14   \n",
       "6        124681     Thomas        Shaw      F  1976-10-26              145.94   \n",
       "7        521807     Kelsey        Pena      F  1968-10-28              161.39   \n",
       "8        504238     Denise      Porter      M  1957-10-31               77.73   \n",
       "9        583532  Alexander  Richardson      F  1974-10-27              142.85   \n",
       "10       924841   Kimberly        Ball      M  1976-10-26              928.68   \n",
       "\n",
       "          Date               Merchant Name     Category Birthyear month  \\\n",
       "0   2023-04-03               Smith-Russell     Cosmetic      2002    04   \n",
       "1   2023-07-17      Peck, Spence and Young       Travel      1985    07   \n",
       "2   2023-09-20                  Steele Inc     Clothing      1981    09   \n",
       "3   2023-01-11  Wilson, Wilson and Russell     Cosmetic      1977    01   \n",
       "4   2023-06-13               Palmer-Hinton  Electronics      1951    06   \n",
       "5   2023-08-24      Tran, Torres and Joyce     Cosmetic      2001    08   \n",
       "6   2023-08-30   Evans, Griffin and Torres     Cosmetic      1976    08   \n",
       "7   2023-02-08                  Miller PLC     Cosmetic      1968    02   \n",
       "8   2023-01-12              Jackson-Morgan   Restaurant      1957    01   \n",
       "9   2023-06-07    Blake, Mays and Anderson     Clothing      1974    06   \n",
       "10  2023-02-11     Miller, Walker and Bond       Travel      1976    02   \n",
       "\n",
       "   PurchaseMonth Month Day  Encoded_Gender  Encoded_Category  \n",
       "0           2023    04  03               0                 1  \n",
       "1           2023    07  17               0                 5  \n",
       "2           2023    09  20               1                 0  \n",
       "3           2023    01  11               1                 1  \n",
       "4           2023    06  13               0                 2  \n",
       "5           2023    08  24               0                 1  \n",
       "6           2023    08  30               0                 1  \n",
       "7           2023    02  08               0                 1  \n",
       "8           2023    01  12               1                 4  \n",
       "9           2023    06  07               0                 0  \n",
       "10          2023    02  11               1                 5  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.preprocessing import LabelEncoder\n",
    "\n",
    "# F=0, M=1\n",
    "label_encoder = LabelEncoder()\n",
    "cust_data['Encoded_Gender'] = label_encoder.fit_transform(cust_data['Gender'])\n",
    "\n",
    "#Category >>> TCategory\n",
    "label_encoder= LabelEncoder()\n",
    "cust_data['Encoded_Category'] = label_encoder.fit_transform(cust_data['Category'])\n",
    "cust_data.head(11)\n",
    "\n",
    "#Cosmestic=1, Travel=5, Clothing=0, Electronics=2, =4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b687b914",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:44:44.645418Z",
     "iopub.status.busy": "2024-06-20T11:44:44.644975Z",
     "iopub.status.idle": "2024-06-20T11:44:44.712837Z",
     "shell.execute_reply": "2024-06-20T11:44:44.711569Z"
    },
    "papermill": {
     "duration": 0.080147,
     "end_time": "2024-06-20T11:44:44.715628",
     "exception": false,
     "start_time": "2024-06-20T11:44:44.635481",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       Customer ID       Name    Surname Gender   Birthdate  \\\n",
      "0           752858       Sean  Rodriguez      F  2002-10-20   \n",
      "1            26381   Michelle     Phelps      F  1985-10-24   \n",
      "2           305449      Jacob   Williams      M  1981-10-25   \n",
      "3           988259     Nathan     Snyder      M  1977-10-26   \n",
      "4           764762    Crystal      Knapp      F  1951-11-02   \n",
      "...            ...        ...        ...    ...         ...   \n",
      "49995       891845  Christine      Leach      F  1997-10-21   \n",
      "49996       800560       Anna      Allen      F  1999-10-21   \n",
      "49997       133285     Nicole   Franklin      M  1979-10-26   \n",
      "49998       616122      Maria     Keller      M  1981-10-25   \n",
      "49999       832184      Billy     Walker      F  1958-10-31   \n",
      "\n",
      "       Transaction Amount        Date                 Merchant Name  \\\n",
      "0                   35.47  2023-04-03                 Smith-Russell   \n",
      "1                 2552.72  2023-07-17        Peck, Spence and Young   \n",
      "2                  115.97  2023-09-20                    Steele Inc   \n",
      "3                   11.31  2023-01-11    Wilson, Wilson and Russell   \n",
      "4                   62.21  2023-06-13                 Palmer-Hinton   \n",
      "...                   ...         ...                           ...   \n",
      "49995              108.74  2023-08-30                 Alexander Ltd   \n",
      "49996              133.66  2023-05-03                 Knapp-Calhoun   \n",
      "49997              464.29  2023-02-12  Cantrell, Haynes and Ballard   \n",
      "49998              472.57  2023-03-25     Wilson, Jackson and Beard   \n",
      "49999              270.67  2023-05-20                     Combs LLC   \n",
      "\n",
      "          Category  Birthyear month PurchaseMonth Month Day  Encoded_Gender  \\\n",
      "0         Cosmetic       2002    04          2023    04  03               0   \n",
      "1           Travel       1985    07          2023    07  17               0   \n",
      "2         Clothing       1981    09          2023    09  20               1   \n",
      "3         Cosmetic       1977    01          2023    01  11               1   \n",
      "4      Electronics       1951    06          2023    06  13               0   \n",
      "...            ...        ...   ...           ...   ...  ..             ...   \n",
      "49995       Market       1997    08          2023    08  30               0   \n",
      "49996     Cosmetic       1999    05          2023    05  03               0   \n",
      "49997       Market       1979    02          2023    02  12               1   \n",
      "49998       Market       1981    03          2023    03  25               1   \n",
      "49999       Market       1958    05          2023    05  20               0   \n",
      "\n",
      "       Encoded_Category    Generation  \n",
      "0                     1  Generation Z  \n",
      "1                     5    Millennial  \n",
      "2                     0    Millennial  \n",
      "3                     1  Generation X  \n",
      "4                     2   Baby Boomer  \n",
      "...                 ...           ...  \n",
      "49995                 3  Generation Z  \n",
      "49996                 1  Generation Z  \n",
      "49997                 3  Generation X  \n",
      "49998                 3    Millennial  \n",
      "49999                 3   Baby Boomer  \n",
      "\n",
      "[50000 rows x 17 columns]\n"
     ]
    }
   ],
   "source": [
    "# Convert 'Birthyear' column to integers\n",
    "cust_data['Birthyear'] = pd.to_numeric(cust_data['Birthyear'], errors='coerce')\n",
    "\n",
    "# Define a function to map birth years to generations\n",
    "def map_to_generation(birth_year):\n",
    "    if 1928 <= birth_year <= 1945:\n",
    "        return 'Silent'\n",
    "    elif 1946 <= birth_year <= 1964:\n",
    "        return 'Baby Boomer'\n",
    "    elif 1965 <= birth_year <= 1980:\n",
    "        return 'Generation X'\n",
    "    elif 1981 <= birth_year <= 1996:\n",
    "        return 'Millennial'\n",
    "    elif 1997 <= birth_year <= 2012:\n",
    "        return 'Generation Z'\n",
    "    else:\n",
    "        return 'Unknown'\n",
    "\n",
    "# Add a new column 'Generation' to the DataFrame\n",
    "cust_data['Generation'] = cust_data['Birthyear'].apply(map_to_generation)\n",
    "\n",
    "# Display the modified DataFrame\n",
    "print(cust_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "40603370",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:44:44.737253Z",
     "iopub.status.busy": "2024-06-20T11:44:44.736867Z",
     "iopub.status.idle": "2024-06-20T11:44:44.812275Z",
     "shell.execute_reply": "2024-06-20T11:44:44.810991Z"
    },
    "papermill": {
     "duration": 0.090331,
     "end_time": "2024-06-20T11:44:44.814582",
     "exception": false,
     "start_time": "2024-06-20T11:44:44.724251",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       Customer ID       Name    Surname Gender   Birthdate  \\\n",
      "0           752858       Sean  Rodriguez      F  2002-10-20   \n",
      "1            26381   Michelle     Phelps      F  1985-10-24   \n",
      "2           305449      Jacob   Williams      M  1981-10-25   \n",
      "3           988259     Nathan     Snyder      M  1977-10-26   \n",
      "4           764762    Crystal      Knapp      F  1951-11-02   \n",
      "...            ...        ...        ...    ...         ...   \n",
      "49995       891845  Christine      Leach      F  1997-10-21   \n",
      "49996       800560       Anna      Allen      F  1999-10-21   \n",
      "49997       133285     Nicole   Franklin      M  1979-10-26   \n",
      "49998       616122      Maria     Keller      M  1981-10-25   \n",
      "49999       832184      Billy     Walker      F  1958-10-31   \n",
      "\n",
      "       Transaction Amount        Date                 Merchant Name  \\\n",
      "0                   35.47  2023-04-03                 Smith-Russell   \n",
      "1                 2552.72  2023-07-17        Peck, Spence and Young   \n",
      "2                  115.97  2023-09-20                    Steele Inc   \n",
      "3                   11.31  2023-01-11    Wilson, Wilson and Russell   \n",
      "4                   62.21  2023-06-13                 Palmer-Hinton   \n",
      "...                   ...         ...                           ...   \n",
      "49995              108.74  2023-08-30                 Alexander Ltd   \n",
      "49996              133.66  2023-05-03                 Knapp-Calhoun   \n",
      "49997              464.29  2023-02-12  Cantrell, Haynes and Ballard   \n",
      "49998              472.57  2023-03-25     Wilson, Jackson and Beard   \n",
      "49999              270.67  2023-05-20                     Combs LLC   \n",
      "\n",
      "          Category  Birthyear month PurchaseMonth  Month Day  Encoded_Gender  \\\n",
      "0         Cosmetic       2002    04          2023      4  03               0   \n",
      "1           Travel       1985    07          2023      7  17               0   \n",
      "2         Clothing       1981    09          2023      9  20               1   \n",
      "3         Cosmetic       1977    01          2023      1  11               1   \n",
      "4      Electronics       1951    06          2023      6  13               0   \n",
      "...            ...        ...   ...           ...    ...  ..             ...   \n",
      "49995       Market       1997    08          2023      8  30               0   \n",
      "49996     Cosmetic       1999    05          2023      5  03               0   \n",
      "49997       Market       1979    02          2023      2  12               1   \n",
      "49998       Market       1981    03          2023      3  25               1   \n",
      "49999       Market       1958    05          2023      5  20               0   \n",
      "\n",
      "       Encoded_Category    Generation  Season  \n",
      "0                     1  Generation Z  Spring  \n",
      "1                     5    Millennial  Summer  \n",
      "2                     0    Millennial    Fall  \n",
      "3                     1  Generation X  Winter  \n",
      "4                     2   Baby Boomer  Summer  \n",
      "...                 ...           ...     ...  \n",
      "49995                 3  Generation Z  Summer  \n",
      "49996                 1  Generation Z  Spring  \n",
      "49997                 3  Generation X  Winter  \n",
      "49998                 3    Millennial  Spring  \n",
      "49999                 3   Baby Boomer  Spring  \n",
      "\n",
      "[50000 rows x 18 columns]\n"
     ]
    }
   ],
   "source": [
    "cust_data['Month'] = pd.to_numeric(cust_data['Month'], errors='coerce')\n",
    "\n",
    "# Define a function to map months to seasons\n",
    "def map_to_season(month):\n",
    "    if 3 <= month <= 5:\n",
    "        return 'Spring'\n",
    "    elif 6 <= month <= 8:\n",
    "        return 'Summer'\n",
    "    elif 9 <= month <= 11:\n",
    "        return 'Fall'\n",
    "    else:\n",
    "        return 'Winter'\n",
    "\n",
    "# Add a new column 'Season' to the DataFrame\n",
    "cust_data['Season'] = cust_data['Month'].apply(map_to_season)\n",
    "\n",
    "# Display the modified DataFrame\n",
    "print(cust_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "bf41a947",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:44:44.833362Z",
     "iopub.status.busy": "2024-06-20T11:44:44.832511Z",
     "iopub.status.idle": "2024-06-20T11:44:44.850953Z",
     "shell.execute_reply": "2024-06-20T11:44:44.849714Z"
    },
    "papermill": {
     "duration": 0.030921,
     "end_time": "2024-06-20T11:44:44.853779",
     "exception": false,
     "start_time": "2024-06-20T11:44:44.822858",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       Customer ID       Name    Surname Gender   Birthdate  \\\n",
      "0           752858       Sean  Rodriguez      F  2002-10-20   \n",
      "1            26381   Michelle     Phelps      F  1985-10-24   \n",
      "2           305449      Jacob   Williams      M  1981-10-25   \n",
      "3           988259     Nathan     Snyder      M  1977-10-26   \n",
      "4           764762    Crystal      Knapp      F  1951-11-02   \n",
      "...            ...        ...        ...    ...         ...   \n",
      "49995       891845  Christine      Leach      F  1997-10-21   \n",
      "49996       800560       Anna      Allen      F  1999-10-21   \n",
      "49997       133285     Nicole   Franklin      M  1979-10-26   \n",
      "49998       616122      Maria     Keller      M  1981-10-25   \n",
      "49999       832184      Billy     Walker      F  1958-10-31   \n",
      "\n",
      "       Transaction Amount        Date                 Merchant Name  \\\n",
      "0                   35.47  2023-04-03                 Smith-Russell   \n",
      "1                 2552.72  2023-07-17        Peck, Spence and Young   \n",
      "2                  115.97  2023-09-20                    Steele Inc   \n",
      "3                   11.31  2023-01-11    Wilson, Wilson and Russell   \n",
      "4                   62.21  2023-06-13                 Palmer-Hinton   \n",
      "...                   ...         ...                           ...   \n",
      "49995              108.74  2023-08-30                 Alexander Ltd   \n",
      "49996              133.66  2023-05-03                 Knapp-Calhoun   \n",
      "49997              464.29  2023-02-12  Cantrell, Haynes and Ballard   \n",
      "49998              472.57  2023-03-25     Wilson, Jackson and Beard   \n",
      "49999              270.67  2023-05-20                     Combs LLC   \n",
      "\n",
      "          Category  Birthyear month PurchaseMonth  Month Day  Encoded_Gender  \\\n",
      "0         Cosmetic       2002    04          2023      4  03               0   \n",
      "1           Travel       1985    07          2023      7  17               0   \n",
      "2         Clothing       1981    09          2023      9  20               1   \n",
      "3         Cosmetic       1977    01          2023      1  11               1   \n",
      "4      Electronics       1951    06          2023      6  13               0   \n",
      "...            ...        ...   ...           ...    ...  ..             ...   \n",
      "49995       Market       1997    08          2023      8  30               0   \n",
      "49996     Cosmetic       1999    05          2023      5  03               0   \n",
      "49997       Market       1979    02          2023      2  12               1   \n",
      "49998       Market       1981    03          2023      3  25               1   \n",
      "49999       Market       1958    05          2023      5  20               0   \n",
      "\n",
      "       Encoded_Category    Generation  Season  Age  \n",
      "0                     1  Generation Z  Spring   22  \n",
      "1                     5    Millennial  Summer   39  \n",
      "2                     0    Millennial    Fall   43  \n",
      "3                     1  Generation X  Winter   47  \n",
      "4                     2   Baby Boomer  Summer   73  \n",
      "...                 ...           ...     ...  ...  \n",
      "49995                 3  Generation Z  Summer   27  \n",
      "49996                 1  Generation Z  Spring   25  \n",
      "49997                 3  Generation X  Winter   45  \n",
      "49998                 3    Millennial  Spring   43  \n",
      "49999                 3   Baby Boomer  Spring   66  \n",
      "\n",
      "[50000 rows x 19 columns]\n"
     ]
    }
   ],
   "source": [
    "import datetime as dt\n",
    "\n",
    "# Convert 'Birthyear' column to numeric values\n",
    "cust_data['Birthyear'] = pd.to_numeric(cust_data['Birthyear'], errors='coerce')\n",
    "\n",
    "# Calculate age based on the current year\n",
    "current_year = dt.datetime.now().year\n",
    "cust_data['Age'] = current_year - cust_data['Birthyear']\n",
    "\n",
    "# Display the modified DataFrame\n",
    "print(cust_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "fa300775",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:44:44.872632Z",
     "iopub.status.busy": "2024-06-20T11:44:44.871910Z",
     "iopub.status.idle": "2024-06-20T11:44:44.880556Z",
     "shell.execute_reply": "2024-06-20T11:44:44.879318Z"
    },
    "papermill": {
     "duration": 0.020555,
     "end_time": "2024-06-20T11:44:44.882771",
     "exception": false,
     "start_time": "2024-06-20T11:44:44.862216",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X=cust_data[['Encoded_Gender','Transaction Amount','Encoded_Category','Month','Age']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "afe585e2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:44:44.902565Z",
     "iopub.status.busy": "2024-06-20T11:44:44.902114Z",
     "iopub.status.idle": "2024-06-20T11:44:59.697015Z",
     "shell.execute_reply": "2024-06-20T11:44:59.695943Z"
    },
    "papermill": {
     "duration": 14.807609,
     "end_time": "2024-06-20T11:44:59.699508",
     "exception": false,
     "start_time": "2024-06-20T11:44:44.891899",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.cluster import KMeans\n",
    "\n",
    "# Assuming X is your feature matrix\n",
    "\n",
    "# Scale the data\n",
    "scaler = StandardScaler()\n",
    "X_scaled = scaler.fit_transform(X)\n",
    "\n",
    "# Using the elbow method to find the optimal number of clusters\n",
    "wcss = []\n",
    "for i in range(2, 11):\n",
    "    kmeans = KMeans(n_clusters=i, init='k-means++', random_state=42)\n",
    "    kmeans.fit(X_scaled)\n",
    "    wcss.append(kmeans.inertia_)\n",
    "\n",
    "# Plot the elbow method\n",
    "plt.plot(range(2, 11), wcss, marker='o', linestyle='-', color='b')\n",
    "plt.title('The Elbow Method')\n",
    "plt.xlabel('Number of clusters')\n",
    "plt.ylabel('WCSS (Within-Cluster Sum of Squares)')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "46518f15",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:44:59.721046Z",
     "iopub.status.busy": "2024-06-20T11:44:59.720671Z",
     "iopub.status.idle": "2024-06-20T11:49:45.818413Z",
     "shell.execute_reply": "2024-06-20T11:49:45.817387Z"
    },
    "papermill": {
     "duration": 286.12201,
     "end_time": "2024-06-20T11:49:45.831540",
     "exception": false,
     "start_time": "2024-06-20T11:44:59.709530",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "from sklearn.cluster import KMeans\n",
    "from sklearn.metrics import silhouette_score\n",
    "\n",
    "# Assuming X is your data\n",
    "#silhouette_scores = [silhouette_score(X, KMeans(n_clusters=i, random_state=42).fit_predict(X)) for i in range(2, 11)]\n",
    "\n",
    "#plt.plot(range(2, 11), silhouette_scores, marker='o')\n",
    "#plt.xlabel('Number of clusters', fontsize=14)\n",
    "#plt.ylabel('Silhouette Score', fontsize=14)\n",
    "#plt.title('Silhouette Method for Optimal Clusters', fontsize=16)\n",
    "#plt.show()\n",
    "\n",
    "#Silhouette method\n",
    "from sklearn.metrics import silhouette_score \n",
    "silhouette_scores = []\n",
    "for i in range(2,11):\n",
    "    m1=KMeans(n_clusters=i, random_state=42)\n",
    "    c = m1.fit_predict(X)\n",
    "    silhouette_scores.append(silhouette_score(X, m1.fit_predict(X)))\n",
    "plt.bar(range(2,11), silhouette_scores) \n",
    "plt.xlabel('Number of clusters', fontsize = 20) \n",
    "plt.ylabel('S(i)', fontsize = 20) \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "542b55ad",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:49:45.855414Z",
     "iopub.status.busy": "2024-06-20T11:49:45.854979Z",
     "iopub.status.idle": "2024-06-20T11:49:45.861905Z",
     "shell.execute_reply": "2024-06-20T11:49:45.860818Z"
    },
    "papermill": {
     "duration": 0.021607,
     "end_time": "2024-06-20T11:49:45.864088",
     "exception": false,
     "start_time": "2024-06-20T11:49:45.842481",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0.817595310097643,\n",
       " 0.7274222921978519,\n",
       " 0.6887680360302201,\n",
       " 0.6259754976169768,\n",
       " 0.622906446041227,\n",
       " 0.5713415099345786,\n",
       " 0.5683714667341815,\n",
       " 0.5622747510354952,\n",
       " 0.5632253557873547]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "silhouette_scores"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "11c6dbf4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:49:45.888511Z",
     "iopub.status.busy": "2024-06-20T11:49:45.888077Z",
     "iopub.status.idle": "2024-06-20T11:49:45.895458Z",
     "shell.execute_reply": "2024-06-20T11:49:45.893629Z"
    },
    "papermill": {
     "duration": 0.023498,
     "end_time": "2024-06-20T11:49:45.898804",
     "exception": false,
     "start_time": "2024-06-20T11:49:45.875306",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of Cluster Required is :  2\n"
     ]
    }
   ],
   "source": [
    "# Getting the maximum value of silhouette score and adding 2 in index because index starts from 2.\n",
    "sc=max(silhouette_scores)\n",
    "number_of_clusters=silhouette_scores.index(sc)+2\n",
    "print(\"Number of Cluster Required is : \", number_of_clusters)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "52c25c44",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:49:45.923968Z",
     "iopub.status.busy": "2024-06-20T11:49:45.922957Z",
     "iopub.status.idle": "2024-06-20T11:49:47.264506Z",
     "shell.execute_reply": "2024-06-20T11:49:47.263219Z"
    },
    "papermill": {
     "duration": 1.35999,
     "end_time": "2024-06-20T11:49:47.270143",
     "exception": false,
     "start_time": "2024-06-20T11:49:45.910153",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "#Fitting K-Means to the dataset\n",
    "kmeans=KMeans(n_clusters=3,init='k-means++',random_state=42)\n",
    "y_kmeans=kmeans.fit_predict(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "27085700",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:49:47.314055Z",
     "iopub.status.busy": "2024-06-20T11:49:47.313227Z",
     "iopub.status.idle": "2024-06-20T11:49:47.360182Z",
     "shell.execute_reply": "2024-06-20T11:49:47.358959Z"
    },
    "papermill": {
     "duration": 0.073645,
     "end_time": "2024-06-20T11:49:47.364085",
     "exception": false,
     "start_time": "2024-06-20T11:49:47.290440",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([9.99265792e-01, 7.09461779e-04, 1.86576658e-05, 5.46971800e-06])"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# We need to reduce dimensionality before we can visualise\n",
    "from sklearn.decomposition import PCA\n",
    "\n",
    "pca=PCA(n_components=4)\n",
    "X_reduced=pca.fit_transform(X)\n",
    "pca.explained_variance_ratio_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "894a3d45",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:49:47.406999Z",
     "iopub.status.busy": "2024-06-20T11:49:47.406351Z",
     "iopub.status.idle": "2024-06-20T11:49:47.414757Z",
     "shell.execute_reply": "2024-06-20T11:49:47.413510Z"
    },
    "papermill": {
     "duration": 0.036917,
     "end_time": "2024-06-20T11:49:47.421239",
     "exception": false,
     "start_time": "2024-06-20T11:49:47.384322",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9999993815556171"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sum(pca.explained_variance_ratio_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "38a13f51",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:49:47.463912Z",
     "iopub.status.busy": "2024-06-20T11:49:47.463273Z",
     "iopub.status.idle": "2024-06-20T11:49:49.184551Z",
     "shell.execute_reply": "2024-06-20T11:49:49.183453Z"
    },
    "papermill": {
     "duration": 1.745822,
     "end_time": "2024-06-20T11:49:49.186967",
     "exception": false,
     "start_time": "2024-06-20T11:49:47.441145",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Visualising the clusters\n",
    "\n",
    "colours=['red','blue']\n",
    "\n",
    "plt.figure(figsize=(8,8))\n",
    "for i in range(2):\n",
    "  plt.scatter(X_reduced[y_kmeans==i,0],X_reduced[y_kmeans==i,1],s=100,c=colours[i],label='Clusters'+str(i+1))\n",
    "plt.title('Clusters of Heating and Cooling Load')\n",
    "plt.xlabel('Dimension 1')\n",
    "plt.ylabel('Dimension 2')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "9920835c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:49:49.276975Z",
     "iopub.status.busy": "2024-06-20T11:49:49.276363Z",
     "iopub.status.idle": "2024-06-20T11:49:50.828142Z",
     "shell.execute_reply": "2024-06-20T11:49:50.826944Z"
    },
    "papermill": {
     "duration": 1.631615,
     "end_time": "2024-06-20T11:49:50.830789",
     "exception": false,
     "start_time": "2024-06-20T11:49:49.199174",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Customer ID</th>\n",
       "      <th>Name</th>\n",
       "      <th>Surname</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Birthdate</th>\n",
       "      <th>Transaction Amount</th>\n",
       "      <th>Date</th>\n",
       "      <th>Merchant Name</th>\n",
       "      <th>Category</th>\n",
       "      <th>Birthyear</th>\n",
       "      <th>month</th>\n",
       "      <th>PurchaseMonth</th>\n",
       "      <th>Month</th>\n",
       "      <th>Day</th>\n",
       "      <th>Encoded_Gender</th>\n",
       "      <th>Encoded_Category</th>\n",
       "      <th>Generation</th>\n",
       "      <th>Season</th>\n",
       "      <th>Age</th>\n",
       "      <th>Clusters</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>752858</td>\n",
       "      <td>Sean</td>\n",
       "      <td>Rodriguez</td>\n",
       "      <td>F</td>\n",
       "      <td>2002-10-20</td>\n",
       "      <td>35.47</td>\n",
       "      <td>2023-04-03</td>\n",
       "      <td>Smith-Russell</td>\n",
       "      <td>Cosmetic</td>\n",
       "      <td>2002</td>\n",
       "      <td>04</td>\n",
       "      <td>2023</td>\n",
       "      <td>4</td>\n",
       "      <td>03</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Generation Z</td>\n",
       "      <td>Spring</td>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>26381</td>\n",
       "      <td>Michelle</td>\n",
       "      <td>Phelps</td>\n",
       "      <td>F</td>\n",
       "      <td>1985-10-24</td>\n",
       "      <td>2552.72</td>\n",
       "      <td>2023-07-17</td>\n",
       "      <td>Peck, Spence and Young</td>\n",
       "      <td>Travel</td>\n",
       "      <td>1985</td>\n",
       "      <td>07</td>\n",
       "      <td>2023</td>\n",
       "      <td>7</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>Millennial</td>\n",
       "      <td>Summer</td>\n",
       "      <td>39</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>305449</td>\n",
       "      <td>Jacob</td>\n",
       "      <td>Williams</td>\n",
       "      <td>M</td>\n",
       "      <td>1981-10-25</td>\n",
       "      <td>115.97</td>\n",
       "      <td>2023-09-20</td>\n",
       "      <td>Steele Inc</td>\n",
       "      <td>Clothing</td>\n",
       "      <td>1981</td>\n",
       "      <td>09</td>\n",
       "      <td>2023</td>\n",
       "      <td>9</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Millennial</td>\n",
       "      <td>Fall</td>\n",
       "      <td>43</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>988259</td>\n",
       "      <td>Nathan</td>\n",
       "      <td>Snyder</td>\n",
       "      <td>M</td>\n",
       "      <td>1977-10-26</td>\n",
       "      <td>11.31</td>\n",
       "      <td>2023-01-11</td>\n",
       "      <td>Wilson, Wilson and Russell</td>\n",
       "      <td>Cosmetic</td>\n",
       "      <td>1977</td>\n",
       "      <td>01</td>\n",
       "      <td>2023</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Generation X</td>\n",
       "      <td>Winter</td>\n",
       "      <td>47</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>764762</td>\n",
       "      <td>Crystal</td>\n",
       "      <td>Knapp</td>\n",
       "      <td>F</td>\n",
       "      <td>1951-11-02</td>\n",
       "      <td>62.21</td>\n",
       "      <td>2023-06-13</td>\n",
       "      <td>Palmer-Hinton</td>\n",
       "      <td>Electronics</td>\n",
       "      <td>1951</td>\n",
       "      <td>06</td>\n",
       "      <td>2023</td>\n",
       "      <td>6</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Baby Boomer</td>\n",
       "      <td>Summer</td>\n",
       "      <td>73</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>576539</td>\n",
       "      <td>Monica</td>\n",
       "      <td>Bartlett</td>\n",
       "      <td>F</td>\n",
       "      <td>2001-10-20</td>\n",
       "      <td>99.14</td>\n",
       "      <td>2023-08-24</td>\n",
       "      <td>Tran, Torres and Joyce</td>\n",
       "      <td>Cosmetic</td>\n",
       "      <td>2001</td>\n",
       "      <td>08</td>\n",
       "      <td>2023</td>\n",
       "      <td>8</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Generation Z</td>\n",
       "      <td>Summer</td>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>124681</td>\n",
       "      <td>Thomas</td>\n",
       "      <td>Shaw</td>\n",
       "      <td>F</td>\n",
       "      <td>1976-10-26</td>\n",
       "      <td>145.94</td>\n",
       "      <td>2023-08-30</td>\n",
       "      <td>Evans, Griffin and Torres</td>\n",
       "      <td>Cosmetic</td>\n",
       "      <td>1976</td>\n",
       "      <td>08</td>\n",
       "      <td>2023</td>\n",
       "      <td>8</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Generation X</td>\n",
       "      <td>Summer</td>\n",
       "      <td>48</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>521807</td>\n",
       "      <td>Kelsey</td>\n",
       "      <td>Pena</td>\n",
       "      <td>F</td>\n",
       "      <td>1968-10-28</td>\n",
       "      <td>161.39</td>\n",
       "      <td>2023-02-08</td>\n",
       "      <td>Miller PLC</td>\n",
       "      <td>Cosmetic</td>\n",
       "      <td>1968</td>\n",
       "      <td>02</td>\n",
       "      <td>2023</td>\n",
       "      <td>2</td>\n",
       "      <td>08</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Generation X</td>\n",
       "      <td>Winter</td>\n",
       "      <td>56</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>504238</td>\n",
       "      <td>Denise</td>\n",
       "      <td>Porter</td>\n",
       "      <td>M</td>\n",
       "      <td>1957-10-31</td>\n",
       "      <td>77.73</td>\n",
       "      <td>2023-01-12</td>\n",
       "      <td>Jackson-Morgan</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>1957</td>\n",
       "      <td>01</td>\n",
       "      <td>2023</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>Baby Boomer</td>\n",
       "      <td>Winter</td>\n",
       "      <td>67</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>583532</td>\n",
       "      <td>Alexander</td>\n",
       "      <td>Richardson</td>\n",
       "      <td>F</td>\n",
       "      <td>1974-10-27</td>\n",
       "      <td>142.85</td>\n",
       "      <td>2023-06-07</td>\n",
       "      <td>Blake, Mays and Anderson</td>\n",
       "      <td>Clothing</td>\n",
       "      <td>1974</td>\n",
       "      <td>06</td>\n",
       "      <td>2023</td>\n",
       "      <td>6</td>\n",
       "      <td>07</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Generation X</td>\n",
       "      <td>Summer</td>\n",
       "      <td>50</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Customer ID       Name     Surname Gender   Birthdate  Transaction Amount  \\\n",
       "0       752858       Sean   Rodriguez      F  2002-10-20               35.47   \n",
       "1        26381   Michelle      Phelps      F  1985-10-24             2552.72   \n",
       "2       305449      Jacob    Williams      M  1981-10-25              115.97   \n",
       "3       988259     Nathan      Snyder      M  1977-10-26               11.31   \n",
       "4       764762    Crystal       Knapp      F  1951-11-02               62.21   \n",
       "5       576539     Monica    Bartlett      F  2001-10-20               99.14   \n",
       "6       124681     Thomas        Shaw      F  1976-10-26              145.94   \n",
       "7       521807     Kelsey        Pena      F  1968-10-28              161.39   \n",
       "8       504238     Denise      Porter      M  1957-10-31               77.73   \n",
       "9       583532  Alexander  Richardson      F  1974-10-27              142.85   \n",
       "\n",
       "         Date               Merchant Name     Category  Birthyear month  \\\n",
       "0  2023-04-03               Smith-Russell     Cosmetic       2002    04   \n",
       "1  2023-07-17      Peck, Spence and Young       Travel       1985    07   \n",
       "2  2023-09-20                  Steele Inc     Clothing       1981    09   \n",
       "3  2023-01-11  Wilson, Wilson and Russell     Cosmetic       1977    01   \n",
       "4  2023-06-13               Palmer-Hinton  Electronics       1951    06   \n",
       "5  2023-08-24      Tran, Torres and Joyce     Cosmetic       2001    08   \n",
       "6  2023-08-30   Evans, Griffin and Torres     Cosmetic       1976    08   \n",
       "7  2023-02-08                  Miller PLC     Cosmetic       1968    02   \n",
       "8  2023-01-12              Jackson-Morgan   Restaurant       1957    01   \n",
       "9  2023-06-07    Blake, Mays and Anderson     Clothing       1974    06   \n",
       "\n",
       "  PurchaseMonth  Month Day  Encoded_Gender  Encoded_Category    Generation  \\\n",
       "0          2023      4  03               0                 1  Generation Z   \n",
       "1          2023      7  17               0                 5    Millennial   \n",
       "2          2023      9  20               1                 0    Millennial   \n",
       "3          2023      1  11               1                 1  Generation X   \n",
       "4          2023      6  13               0                 2   Baby Boomer   \n",
       "5          2023      8  24               0                 1  Generation Z   \n",
       "6          2023      8  30               0                 1  Generation X   \n",
       "7          2023      2  08               0                 1  Generation X   \n",
       "8          2023      1  12               1                 4   Baby Boomer   \n",
       "9          2023      6  07               0                 0  Generation X   \n",
       "\n",
       "   Season  Age  Clusters  \n",
       "0  Spring   22         1  \n",
       "1  Summer   39         2  \n",
       "2    Fall   43         1  \n",
       "3  Winter   47         1  \n",
       "4  Summer   73         1  \n",
       "5  Summer   23         1  \n",
       "6  Summer   48         1  \n",
       "7  Winter   56         1  \n",
       "8  Winter   67         1  \n",
       "9  Summer   50         1  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Build a model with kmenas\n",
    "\n",
    "#Fitting K-Means to the dataset\n",
    "kmeans=KMeans(n_clusters=4,init='k-means++',random_state=42)\n",
    "y_kmeans=kmeans.fit_predict(X)\n",
    "\n",
    "# Appending those cluster value into main dataframe (without standard-scalar)\n",
    "\n",
    "cust_data['Clusters'] = y_kmeans + 1\n",
    "\n",
    "cust_data.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "4c0d611f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:49:50.861037Z",
     "iopub.status.busy": "2024-06-20T11:49:50.860070Z",
     "iopub.status.idle": "2024-06-20T11:49:51.512490Z",
     "shell.execute_reply": "2024-06-20T11:49:51.511451Z"
    },
    "papermill": {
     "duration": 0.669333,
     "end_time": "2024-06-20T11:49:51.514824",
     "exception": false,
     "start_time": "2024-06-20T11:49:50.845491",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "pl = sns.countplot(x=cust_data[\"Clusters\"])\n",
    "pl.set_title(\"Distribution Of The Clusters\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "ad3d212f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:49:51.543513Z",
     "iopub.status.busy": "2024-06-20T11:49:51.543068Z",
     "iopub.status.idle": "2024-06-20T11:49:58.008226Z",
     "shell.execute_reply": "2024-06-20T11:49:58.007090Z"
    },
    "papermill": {
     "duration": 6.482698,
     "end_time": "2024-06-20T11:49:58.010822",
     "exception": false,
     "start_time": "2024-06-20T11:49:51.528124",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/seaborn/axisgrid.py:118: UserWarning: The figure layout has changed to tight\n",
      "  self._figure.tight_layout(*args, **kwargs)\n",
      "/opt/conda/lib/python3.10/site-packages/seaborn/axisgrid.py:118: UserWarning: The figure layout has changed to tight\n",
      "  self._figure.tight_layout(*args, **kwargs)\n",
      "/opt/conda/lib/python3.10/site-packages/seaborn/axisgrid.py:118: UserWarning: The figure layout has changed to tight\n",
      "  self._figure.tight_layout(*args, **kwargs)\n",
      "/opt/conda/lib/python3.10/site-packages/seaborn/axisgrid.py:118: UserWarning: The figure layout has changed to tight\n",
      "  self._figure.tight_layout(*args, **kwargs)\n",
      "/opt/conda/lib/python3.10/site-packages/seaborn/axisgrid.py:118: UserWarning: The figure layout has changed to tight\n",
      "  self._figure.tight_layout(*args, **kwargs)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Specify the columns you want to include in the interpretation\n",
    "selected_columns = ['Encoded_Gender', 'Transaction Amount', 'Encoded_Category', 'Month', 'Age', 'Clusters']\n",
    "\n",
    "# Create a subset DataFrame with only the selected columns\n",
    "selected_data = cust_data[selected_columns]\n",
    "\n",
    "# Set styling parameters\n",
    "sns.set(rc={'axes.facecolor':'black', 'figure.facecolor':'black', 'axes.grid' : False, 'font.family': 'Dejavu sans'})\n",
    "\n",
    "# Loop through the selected columns excluding 'Clusters'\n",
    "for i in selected_columns[:-1]:\n",
    "    # Create a FacetGrid for each column\n",
    "    diag = sns.FacetGrid(selected_data, col=\"Clusters\", hue=\"Clusters\", palette=\"Set1\")\n",
    "    \n",
    "    # Map histograms to each FacetGrid\n",
    "    diag.map(plt.hist, i, bins=8, ec=\"k\") \n",
    "    \n",
    "    # Set styling for better visualization\n",
    "    diag.set_xticklabels(rotation=25, color='white')\n",
    "    diag.set_yticklabels(color='white')\n",
    "    diag.set_xlabels(size=16, color='white')\n",
    "    diag.set_titles(size=16, color='#f01132', fontweight=\"bold\")\n",
    "    diag.fig.set_figheight(6)\n",
    "\n",
    "# Show the plots\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "e4838dfc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:49:58.048237Z",
     "iopub.status.busy": "2024-06-20T11:49:58.047862Z",
     "iopub.status.idle": "2024-06-20T11:49:58.460235Z",
     "shell.execute_reply": "2024-06-20T11:49:58.458785Z"
    },
    "papermill": {
     "duration": 0.434038,
     "end_time": "2024-06-20T11:49:58.463465",
     "exception": false,
     "start_time": "2024-06-20T11:49:58.029427",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "df = pd.DataFrame(cust_data)\n",
    "\n",
    "# Export the DataFrame to a CSV file\n",
    "df.to_csv('output_file.csv', index=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "e48ba132",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:49:58.502755Z",
     "iopub.status.busy": "2024-06-20T11:49:58.502319Z",
     "iopub.status.idle": "2024-06-20T11:49:58.510606Z",
     "shell.execute_reply": "2024-06-20T11:49:58.509552Z"
    },
    "papermill": {
     "duration": 0.028765,
     "end_time": "2024-06-20T11:49:58.513999",
     "exception": false,
     "start_time": "2024-06-20T11:49:58.485234",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CSV file exported successfully. Stored at: output_file.csv\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<a href='output_file.csv' target='_blank'>output_file.csv</a><br>"
      ],
      "text/plain": [
       "/kaggle/working/output_file.csv"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Get the path where the file is stored\n",
    "file_path = 'output_file.csv'\n",
    "\n",
    "# Print the path\n",
    "print(f\"CSV file exported successfully. Stored at: {file_path}\")\n",
    "\n",
    "from IPython.display import FileLink\n",
    "\n",
    "# Create a link to download the CSV file\n",
    "FileLink(r'output_file.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "402afb94",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-20T11:49:58.553329Z",
     "iopub.status.busy": "2024-06-20T11:49:58.552150Z",
     "iopub.status.idle": "2024-06-20T12:07:24.483052Z",
     "shell.execute_reply": "2024-06-20T12:07:24.480061Z"
    },
    "papermill": {
     "duration": 1045.971734,
     "end_time": "2024-06-20T12:07:24.506268",
     "exception": false,
     "start_time": "2024-06-20T11:49:58.534534",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from seaborn.matrix import dendrogram\n",
    "\n",
    "#Using Dendogram to find the optimal number of clusters\n",
    "\n",
    "import scipy.cluster.hierarchy as sch\n",
    "\n",
    "plt.figure(figsize=(15,6))\n",
    "dendrogram = sch.dendrogram(sch.linkage(X,method='ward'))\n",
    "plt.title('Dendogram')\n",
    "plt.xlabel('Features')\n",
    "plt.ylabel('Euclidean distances')\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 3863944,
     "sourceId": 6704707,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30558,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 1370.324285,
   "end_time": "2024-06-20T12:07:27.249019",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-20T11:44:36.924734",
   "version": "2.4.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
